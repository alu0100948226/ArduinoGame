#ifndef SHIELD_H
#define SHIELD_H

#include <Arduino.h>

#include <SPI.h>

#include <Adafruit_ST7735.h>

#include <gfxfont.h>
#include <Adafruit_SPITFT_Macros.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SPITFT.h>

static const uint8_t shield_bitmap[] PROGMEM = {
  0x01, 0x80, 0x07, 0xe0, 0x1f, 0xf8, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x3f, 0xfc, 0x3f, 0xfc,
	0x3f, 0xfc, 0x3f, 0xfc, 0x1f, 0xf8, 0x1f, 0xf8, 0x0f, 0xf0, 0x07, 0xe0, 0x03, 0xc0, 0x01, 0x80
};
/*static const uint8_t shield_data[512] PROGMEM = {
    // █▓▓█▓██▓▓████▓▓█
    // ▓▓██∙█▓▓▓▓█∙██▓▓
    // ▓█▓██▓▓▓▓▓▓██▓█▓
    // ▓▓▓▓░∙▒▒▓▒∙░▓▓▓▓
    // ▒▓▓∙░░▒▒▒▒░∙∙▓▓▒
    // ▓▒░░∙░▒▒▒▒░∙░░▒▓
    // ▓▒░▒▒▒░▒▒░▒░▒░▒▓
    // ▓▓░░▒░░▒▒░░▒░░▓▓
    // ▓▓░░∙∙░▒▒░∙∙∙░▓░
    // ▒▓▒∙░░░░▒░░░∙▒▓∙
    // █▓▒▒░∙░░▒░░░▒▒▓█
    // ▓∙▓▓▓∙░░░░∙▒▓▓█▓
    // ▓▓▓▓▒∙░▒▒░∙▒▓▒▓▓
    // ▓▓▓▒█▒░▒▒▒▒▓∙█▓▓
    // ▓▓▓▓█▓▓▒▒▓▓██▒▓▓
    // ▒▓▓▓▓▓▓▒▒▒▓▓▓▒▓▒
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xde,0x9c,0x90,0xbd,0x74,0xb5,0x53,0x8b,0xce,0xef,0x1a,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xd6,0x56,0xff,0x9a,0xad,0x32,0x83,0xee,0x83,0xce,0xac,0xf2,0xee,0xd6,0xcd,0xd3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0xe6,0xf8,0xff,0xfd,0xbd,0xb5,0x9c,0xb3,0x84,0x11,0x7b,0xae,0x7b,0xad,0x8c,0x10,0x9c,0xb2,0xc5,0xb3,0xff,0xff,0xee,0xb6,0x00,0x00,0x00,0x00
    ,0xc6,0x17,0xe6,0xfa,0xa5,0x13,0xa5,0x13,0x73,0xb2,0x3a,0x30,0x2a,0x10,0x6b,0x91,0x73,0xb1,0x32,0x30,0x3a,0x2f,0x73,0xb1,0xac,0xf2,0xac,0xf2,0xd6,0x16,0xbd,0x53
    ,0xce,0x37,0xde,0xb9,0x94,0x91,0x84,0x11,0x22,0x31,0x1a,0x31,0x1a,0xf2,0x2a,0x2f,0x32,0x2e,0x1a,0xf2,0x1a,0x0f,0x22,0x0f,0x83,0xf0,0x94,0x50,0xcd,0xd5,0xbd,0x73
    ,0xd6,0x78,0xff,0xfb,0x94,0xb3,0x42,0xb2,0x1a,0xb1,0x1a,0x71,0x23,0x11,0x6b,0xad,0x7b,0xec,0x23,0x12,0x1a,0x70,0x1a,0xb1,0x42,0x6f,0x94,0x72,0xde,0x55,0xc5,0x94
    ,0xde,0xb9,0xff,0xff,0x84,0x53,0x22,0x12,0x1b,0x94,0x23,0x94,0x43,0x4f,0x94,0x8c,0x8c,0x6c,0x53,0xaf,0x23,0xb4,0x23,0x73,0x21,0xcf,0x84,0x33,0xff,0xf9,0xc5,0xb5
    ,0xe7,0x1a,0x52,0xef,0x9c,0xd4,0x52,0x30,0x52,0x0e,0x2a,0x30,0x31,0xef,0x42,0x4e,0x4a,0x4e,0x31,0xee,0x2a,0x30,0x52,0x0e,0x51,0xee,0x94,0xb3,0x00,0xad,0xcd,0xd5
    ,0x00,0x00,0xad,0x34,0xad,0x75,0x5a,0xb0,0x79,0xab,0x89,0xaa,0x71,0x8a,0x59,0x8c,0x61,0x6b,0x69,0x8b,0x89,0xaa,0x81,0x8a,0x5a,0x6f,0xad,0x34,0xa4,0xf4,0xcd,0xf6
    ,0x00,0x00,0xc5,0xf6,0xd6,0x56,0x6b,0x92,0x51,0xef,0x81,0xcc,0x99,0xca,0x81,0xaa,0x81,0xaa,0x99,0xc9,0x81,0xa9,0x51,0xcd,0x6b,0x72,0xc5,0xd5,0xbd,0x95,0x00,0x00
    ,0x00,0x00,0xd6,0x58,0xff,0xff,0x9c,0xd3,0x7b,0xd1,0x41,0xf0,0x51,0xad,0x89,0xca,0x91,0xa8,0x51,0x6b,0x39,0xae,0x73,0xb1,0xa4,0xd3,0xee,0xd8,0xc5,0xb5,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x9c,0xb1,0xad,0x12,0x94,0x93,0x2a,0x12,0x31,0x90,0x69,0xac,0x69,0x8a,0x39,0x6e,0x21,0xd1,0x8c,0x72,0xad,0x32,0x9c,0x91,0xde,0x57,0x00,0x00
    ,0x00,0x00,0x00,0x00,0xef,0x5b,0x94,0x92,0xbd,0xb6,0x73,0xf3,0x29,0xf2,0x3a,0x32,0x42,0x31,0x21,0xd2,0x73,0xb3,0xb5,0x75,0xff,0xff,0xd6,0x58,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0xef,0x3a,0x00,0x04,0xc5,0xf6,0x94,0x94,0x9c,0xd4,0x9c,0xd4,0x94,0x94,0xbd,0xb5,0xf6,0xf7,0xd6,0x36,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xf7,0x5a,0x9c,0xb2,0xde,0x98,0xad,0x13,0xa4,0xf3,0xce,0x36,0xf7,0x38,0xde,0x77,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xef,0x1a,0xc5,0xd6,0xce,0x17,0xcd,0xf6,0xef,0x3a,0xd6,0x37,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00


};*/


class Shield{
private:
  int _pos_x;
  int _pos_y;

public:

  Shield(int posx, int posy);
  ~Shield();

  void position(int * pos);
  void on_draw(Adafruit_ST7735 * tft);
  void pickup(Adafruit_ST7735 * tft);
  int operator==(const Shield& other) const;
};
#endif //SHIELD_H
